{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport IconButton from '@material-ui/core/IconButton';\n\nvar CustomizeCarousel = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomizeCarousel, _React$Component);\n\n  var _super = _createSuper(CustomizeCarousel);\n\n  function CustomizeCarousel(props) {\n    var _this;\n\n    _classCallCheck(this, CustomizeCarousel);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      count: 0\n    };\n    _this.handleTimer = _this.handleTimer.bind(_assertThisInitialized(_this));\n    _this.timer = _this.timer.bind(_assertThisInitialized(_this));\n    _this.handleNext = _this.handleNext.bind(_assertThisInitialized(_this));\n    _this.handleBack = _this.handleBack.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CustomizeCarousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleTimer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.handleTimer);\n    }\n  }, {\n    key: \"handleTimer\",\n    value: function handleTimer() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.timer();\n      }, 1000);\n    }\n  }, {\n    key: \"timer\",\n    value: function timer() {\n      this.setState(function (prevState) {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    }\n  }, {\n    key: \"handleNext\",\n    value: function handleNext() {\n      if (!this.props.rotateBy) {\n        this.setState(function (prevState) {\n          return {\n            count: prevState.count + 3\n          };\n        });\n      } else {\n        this.setState(function (prevState, props) {\n          return {\n            count: prevState.count + props.rotateBy\n          };\n        });\n      }\n    }\n  }, {\n    key: \"handleBack\",\n    value: function handleBack() {\n      if (!this.props.rotateBy) {\n        if (this.state.count > 3) {\n          this.setState(function (prevState) {\n            return {\n              count: prevState.count - 3\n            };\n          });\n        } else {\n          this.setState({\n            count: 0\n          });\n        }\n      } else {\n        if (this.state.count > 3) {\n          this.setState(function (prevState, props) {\n            return {\n              count: prevState.count - props.rotateBy\n            };\n          });\n        } else {\n          this.setState({\n            count: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          imgsrc = _this$props.imgsrc,\n          rotateBy = _this$props.rotateBy,\n          mode = _this$props.mode,\n          controlButton = _this$props.controlButton,\n          navigateButton = _this$props.navigateButton;\n      var list = [];\n\n      if (!imgsrc) {\n        return list;\n      } else {\n        if (!rotateBy) {\n          for (var i = 0; i <= imgsrc.length - 1; i++) {\n            list.push( /*#__PURE__*/_jsx(\"div\", {\n              children: parseInt(this.state.count / 3) % imgsrc.length === i ? /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsx(\"img\", {\n                  src: imgsrc[i],\n                  style: {\n                    margin: '0 auto',\n                    width: '100%'\n                  }\n                })\n              }) : ''\n            }, i));\n          }\n        } else {\n          for (var _i = 0; _i <= imgsrc.length - 1; _i++) {\n            list.push( /*#__PURE__*/_jsx(\"div\", {\n              children: parseInt(this.state.count / rotateBy) % imgsrc.length === _i ? /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsx(\"img\", {\n                  src: imgsrc[_i],\n                  style: {\n                    margin: '0 auto',\n                    width: '100%'\n                  }\n                })\n              }) : ''\n            }, _i));\n          }\n        }\n      }\n\n      var RadioNavigation = [];\n\n      if (!imgsrc) {\n        return RadioNavigation;\n      } else {\n        if (!rotateBy) {\n          var _loop = function _loop(_i2) {\n            RadioNavigation.push( /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                display: 'inline',\n                textAlign: 'center'\n              },\n              children: parseInt(_this3.state.count / 3) % imgsrc.length === _i2 ? /*#__PURE__*/_jsx(IconButton, {\n                size: \"small\",\n                onClick: function onClick() {\n                  _this3.setState({\n                    count: 3 * _i2\n                  });\n                },\n                children: /*#__PURE__*/_jsx(PlayCircleFilledIcon, {\n                  style: {\n                    color: mode === 'day' ? 'black' : 'white'\n                  }\n                })\n              }) : /*#__PURE__*/_jsx(IconButton, {\n                size: \"small\",\n                onClick: function onClick() {\n                  _this3.setState({\n                    count: 3 * _i2\n                  });\n                },\n                children: /*#__PURE__*/_jsx(RadioButtonUncheckedIcon, {\n                  style: {\n                    color: mode === 'day' ? 'black' : 'white'\n                  }\n                })\n              })\n            }, _i2));\n          };\n\n          for (var _i2 = 0; _i2 <= imgsrc.length - 1; _i2++) {\n            _loop(_i2);\n          }\n        } else {\n          var _loop2 = function _loop2(_i3) {\n            RadioNavigation.push( /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                display: 'inline',\n                textAlign: 'center'\n              },\n              children: parseInt(_this3.state.count / rotateBy) % imgsrc.length === _i3 ? /*#__PURE__*/_jsx(IconButton, {\n                size: \"small\",\n                onClick: function onClick() {\n                  _this3.setState({\n                    count: rotateBy * _i3\n                  });\n                },\n                children: /*#__PURE__*/_jsx(PlayCircleFilledIcon, {\n                  style: {\n                    color: mode === 'day' ? 'black' : 'white'\n                  }\n                })\n              }) : /*#__PURE__*/_jsx(IconButton, {\n                size: \"small\",\n                onClick: function onClick() {\n                  _this3.setState({\n                    count: rotateBy * _i3\n                  });\n                },\n                children: /*#__PURE__*/_jsx(RadioButtonUncheckedIcon, {\n                  style: {\n                    color: mode === 'day' ? 'black' : 'white'\n                  }\n                })\n              })\n            }, _i3));\n          };\n\n          for (var _i3 = 0; _i3 <= imgsrc.length - 1; _i3++) {\n            _loop2(_i3);\n          }\n        }\n      }\n\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: list\n          })\n        }), /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          style: {\n            marginLeft: '-1rem'\n          },\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 1,\n            md: 1,\n            style: {\n              paddingLeft: 0\n            },\n            children: controlButton === true && /*#__PURE__*/_jsx(Button, {\n              style: {\n                color: mode === 'day' ? 'black' : 'white'\n              },\n              onClick: this.handleBack,\n              children: /*#__PURE__*/_jsx(ArrowBackIosIcon, {})\n            })\n          }), navigateButton === true ? /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 10,\n            md: 10,\n            style: {\n              textAlign: 'center'\n            },\n            children: RadioNavigation\n          }) : /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 10,\n            style: {\n              textAlign: 'center'\n            }\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 1,\n            md: 1,\n            children: controlButton === true && /*#__PURE__*/_jsx(Button, {\n              onClick: this.handleNext,\n              style: {\n                color: mode === 'day' ? 'black' : 'white'\n              },\n              children: /*#__PURE__*/_jsx(ArrowForwardIosIcon, {})\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return CustomizeCarousel;\n}(React.Component);\n\nexport default CustomizeCarousel;","map":null,"metadata":{},"sourceType":"module"}