{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass CustomizeCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n    this.handleTimer = this.handleTimer.bind(this);\n    this.timer = this.timer.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.handleTimer);\n  }\n\n  handleTimer() {\n    setInterval(() => {\n      this.timer();\n    }, 1000);\n  }\n\n  timer() {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }));\n  }\n\n  handleNext() {\n    if (!this.props.rotateBy) {\n      this.setState(prevState => ({\n        count: prevState.count + 3\n      }));\n    } else {\n      this.setState((prevState, props) => ({\n        count: prevState.count + props.rotateBy\n      }));\n    }\n  }\n\n  handleBack() {\n    if (!this.props.rotateBy) {\n      if (this.state.count > 3) {\n        this.setState(prevState => ({\n          count: prevState.count - 3\n        }));\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n    } else {\n      if (this.state.count > 3) {\n        this.setState((prevState, props) => ({\n          count: prevState.count - props.rotateBy\n        }));\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      imgsrc,\n      rotateBy,\n      mode,\n      controlButton,\n      navigateButton\n    } = this.props;\n    const list = [];\n\n    if (!imgsrc) {\n      return list;\n    } else {\n      if (!rotateBy) {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          list.push( /*#__PURE__*/_jsx(\"div\", {\n            children: parseInt(this.state.count / 3) % imgsrc.length === i ? /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: imgsrc[i],\n                style: {\n                  margin: '0 auto',\n                  width: '100%'\n                }\n              })\n            }) : ''\n          }, i));\n        }\n      } else {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          list.push( /*#__PURE__*/_jsx(\"div\", {\n            children: parseInt(this.state.count / rotateBy) % imgsrc.length === i ? /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: imgsrc[i],\n                style: {\n                  margin: '0 auto',\n                  width: '100%'\n                }\n              })\n            }) : ''\n          }, i));\n        }\n      }\n    }\n\n    const RadioNavigation = [];\n\n    if (!imgsrc) {\n      return RadioNavigation;\n    } else {\n      if (!rotateBy) {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          RadioNavigation.push( /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              display: 'inline',\n              textAlign: 'center'\n            },\n            children: parseInt(this.state.count / 3) % imgsrc.length === i ? /*#__PURE__*/_jsx(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: 3 * i\n                });\n              },\n              children: /*#__PURE__*/_jsx(PlayCircleFilledIcon, {\n                style: {\n                  color: mode === 'day' ? 'black' : 'white'\n                }\n              })\n            }) : /*#__PURE__*/_jsx(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: 3 * i\n                });\n              },\n              children: /*#__PURE__*/_jsx(RadioButtonUncheckedIcon, {\n                style: {\n                  color: mode === 'day' ? 'black' : 'white'\n                }\n              })\n            })\n          }, i));\n        }\n      } else {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          RadioNavigation.push( /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              display: 'inline',\n              textAlign: 'center'\n            },\n            children: parseInt(this.state.count / rotateBy) % imgsrc.length === i ? /*#__PURE__*/_jsx(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: rotateBy * i\n                });\n              },\n              children: /*#__PURE__*/_jsx(PlayCircleFilledIcon, {\n                style: {\n                  color: mode === 'day' ? 'black' : 'white'\n                }\n              })\n            }) : /*#__PURE__*/_jsx(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                this.setState({\n                  count: rotateBy * i\n                });\n              },\n              children: /*#__PURE__*/_jsx(RadioButtonUncheckedIcon, {\n                style: {\n                  color: mode === 'day' ? 'black' : 'white'\n                }\n              })\n            })\n          }, i));\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: list\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        style: {\n          marginLeft: '-1rem'\n        },\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 1,\n          md: 1,\n          style: {\n            paddingLeft: 0\n          },\n          children: controlButton === true && /*#__PURE__*/_jsx(Button, {\n            style: {\n              color: mode === 'day' ? 'black' : 'white'\n            },\n            onClick: this.handleBack,\n            children: /*#__PURE__*/_jsx(ArrowBackIosIcon, {})\n          })\n        }), navigateButton === true ? /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 10,\n          md: 10,\n          style: {\n            textAlign: 'center'\n          },\n          children: RadioNavigation\n        }) : /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 10,\n          style: {\n            textAlign: 'center'\n          }\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 1,\n          md: 1,\n          children: controlButton === true && /*#__PURE__*/_jsx(Button, {\n            onClick: this.handleNext,\n            style: {\n              color: mode === 'day' ? 'black' : 'white'\n            },\n            children: /*#__PURE__*/_jsx(ArrowForwardIosIcon, {})\n          })\n        })]\n      })]\n    });\n  }\n\n}\n\nexport default CustomizeCarousel;","map":null,"metadata":{},"sourceType":"module"}