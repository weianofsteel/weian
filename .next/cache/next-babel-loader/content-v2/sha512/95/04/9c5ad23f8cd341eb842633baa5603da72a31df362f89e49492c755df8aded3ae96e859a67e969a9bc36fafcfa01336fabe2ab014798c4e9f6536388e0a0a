{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { i18n, withTranslation } from '../i18n';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles({\n  link: {\n    fontFamily: 'Roboto',\n    fontWeight: 400,\n    letterSpacing: '1px',\n    marginLeft: '32px',\n    color: '#8F8F8F',\n    fontSize: '1rem',\n    \"&:hover\": {\n      color: 'black'\n    }\n  },\n  formControl: {// width:'20rem',\n    // fontSize:'1.6rem'\n  }\n});\n\nconst Sample = ({\n  t\n}) => {\n  const classes = useStyles();\n  const [language, setLanguage] = React.useState('en');\n  const [open, setOpen] = React.useState(false); // const handleLanguage = () => {\n  //     i18n.changeLanguage(i18n.language === 'en' ? 'es' : 'en')\n  // }\n\n  const handleChange = event => {\n    setLanguage(event.target.value);\n    i18n.changeLanguage(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      style: {\n        marginTop: '5rem',\n        fontSize: '2rem'\n      },\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 3\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxs(\"p\", {\n            children: [/*#__PURE__*/_jsx(TranslateIcon, {}), \"\\xA0language/\\u8A9E\\u8A00\"]\n          }), /*#__PURE__*/_jsxs(Select, {\n            labelId: \"demo-controlled-open-select-label\",\n            id: \"demo-controlled-open-select\",\n            open: open,\n            onClose: handleClose,\n            onOpen: handleOpen,\n            value: language,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsx(MenuItem, {\n              value: 'en',\n              children: \"English\"\n            }), /*#__PURE__*/_jsx(MenuItem, {\n              value: 'zhHant',\n              children: \"\\u4E2D\\u6587\"\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontSize: '1.5rem'\n          },\n          children: t('title')\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontSize: '1.5rem'\n          },\n          children: t('greeting')\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(Grid, {\n      container: true,\n      style: {\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 5\n      })\n    })]\n  });\n};\n\nexport default withTranslation('sample')(Sample);","map":null,"metadata":{},"sourceType":"module"}