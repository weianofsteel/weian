{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Select as MaterialSelect, InputLabel, FormControl, MenuItem } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport TranslateIcon from '@material-ui/icons/Translate';\nvar useStyles = makeStyles({\n  inputLabel: {\n    fontSize: \"1.1rem\",\n    fontFamily: \"微軟正黑體\",\n    display: \"flex\",\n    flexDirection: \"row-Reverse\"\n  }\n});\nexport function Select(props) {\n  var classes = useStyles();\n  var onOpen = props.onOpen,\n      onClose = props.onClose,\n      onChange = props.onChange,\n      items = props.items,\n      open = props.open,\n      value = props.value,\n      mode = props.mode;\n  return /*#__PURE__*/_jsx(FormControl, {\n    children: /*#__PURE__*/_jsx(MaterialSelect, {\n      labelId: \"demo-controlled-open-select-label\",\n      id: \"demo-controlled-open-select\",\n      open: open,\n      onClose: onClose,\n      onOpen: onOpen,\n      value: value,\n      onChange: onChange,\n      disableUnderline: true,\n      autoFocus: false,\n      renderValue: function renderValue() {\n        return /*#__PURE__*/_jsx(TranslateIcon, {\n          style: {\n            color: mode === 'day' ? '#1F1F1F' : '#FFFFFF'\n          }\n        });\n      },\n      style: {\n        backgroundColor: 'transparent'\n      },\n      children: items.map(function (item, index) {\n        var _item$props, _item$value, _item$label;\n\n        return /*#__PURE__*/_createElement(MenuItem, _objectSpread(_objectSpread({}, (_item$props = item.props) !== null && _item$props !== void 0 ? _item$props : null), {}, {\n          key: index,\n          value: (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : \"\",\n          classes: {\n            root: classes.input\n          }\n        }), (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : \"\");\n      })\n    })\n  });\n}\nexport function Select2(props) {\n  var classes = useStyles();\n  var label = props.label,\n      value = props.value,\n      name = props.name,\n      items = props.items,\n      formControlProps = props.formControlProps,\n      selectProps = props.selectProps,\n      required = props.required,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      mode = props.mode;\n\n  var newProps = _objectSpread({}, props);\n\n  delete newProps[\"helperText\"];\n  return /*#__PURE__*/_jsxs(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsx(TranslateIcon, {})\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 1\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 9,\n      children: /*#__PURE__*/_jsxs(FormControl, _objectSpread(_objectSpread({}, formControlProps), {}, {\n        size: \"small\",\n        fullWidth: true,\n        disabled: disabled,\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          required: required,\n          id: \"demo-simple-select-label\",\n          classes: {\n            root: classes.inputLabel,\n            required: classes.selectRequired\n          },\n          style: {\n            color: mode === 'day' ? '#1F1F1F' : '#FFFFFF'\n          },\n          children: label\n        }), /*#__PURE__*/_jsx(MaterialSelect, _objectSpread(_objectSpread(_objectSpread({}, selectProps), {}, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          style: {\n            backgroundColor: 'transparent',\n            color: mode === 'day' ? '#1F1F1F' : '#FFFFFF'\n          },\n          disableUnderline: true,\n          inputProps: {\n            name: name,\n            classes: {\n              select: classes.input\n            }\n          },\n          SelectDisplayProps: {\n            tabIndex: tabIndex\n          },\n          value: value === null ? \"\" : value,\n          label: label,\n          displayEmpty: true,\n          renderValue: function renderValue(selected) {\n            function checkEqual(a, b) {\n              if (a === null || a === undefined) {\n                a = \"\";\n              }\n\n              if (b === null || b === undefined) {\n                b = \"\";\n              }\n\n              if (typeof a === \"number\") {\n                a = a.toString();\n              }\n\n              if (typeof b === \"number\") {\n                b = b.toString();\n              }\n\n              return a == b;\n            }\n\n            var filters = items.filter(function (item) {\n              return checkEqual(item.value, selected);\n            });\n            return filters[0] ? filters[0][\"label\"] : \"\";\n          }\n        }, newProps), {}, {\n          children: items.map(function (item, index) {\n            var _item$props2, _item$value2, _item$label2;\n\n            return /*#__PURE__*/_createElement(MenuItem, _objectSpread(_objectSpread({}, (_item$props2 = item.props) !== null && _item$props2 !== void 0 ? _item$props2 : null), {}, {\n              key: index,\n              value: (_item$value2 = item.value) !== null && _item$value2 !== void 0 ? _item$value2 : \"\",\n              classes: {\n                root: classes.input\n              }\n            }), (_item$label2 = item.label) !== null && _item$label2 !== void 0 ? _item$label2 : \"\");\n          })\n        }))]\n      }))\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}