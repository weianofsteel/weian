{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wangweian/wangweian/weian/component/Public/PublicComponent.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Select as MaterialSelect, InputLabel, FormControl, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TranslateIcon from '@material-ui/icons/Translate';\nconst useStyles = makeStyles({\n  inputLabel: {\n    fontSize: \"1.1rem\",\n    fontFamily: \"微軟正黑體\",\n    display: \"flex\",\n    flexDirection: \"row-Reverse\"\n  }\n});\nexport function Select(props) {\n  const classes = useStyles();\n  const {\n    onOpen,\n    onClose,\n    onChange,\n    items,\n    open,\n    value,\n    mode\n  } = props;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: /*#__PURE__*/_jsxDEV(MaterialSelect, {\n      labelId: \"demo-controlled-open-select-label\",\n      id: \"demo-controlled-open-select\",\n      open: open,\n      onClose: onClose,\n      onOpen: onOpen,\n      value: value,\n      onChange: onChange,\n      disableUnderline: true,\n      autoFocus: false,\n      renderValue: () => {\n        return /*#__PURE__*/_jsxDEV(TranslateIcon, {\n          style: {\n            color: mode === 'day' ? '#1F1F1F' : '#FFFFFF'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 28\n        }, this);\n      },\n      style: {\n        backgroundColor: 'transparent'\n      },\n      children: items.map(function (item, index) {\n        var _item$props, _item$value, _item$label;\n\n        return /*#__PURE__*/_createElement(MenuItem, _objectSpread(_objectSpread({}, (_item$props = item.props) !== null && _item$props !== void 0 ? _item$props : null), {}, {\n          key: index,\n          value: (_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : \"\",\n          classes: {\n            root: classes.input\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }\n        }), (_item$label = item.label) !== null && _item$label !== void 0 ? _item$label : \"\");\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\nexport function Select2(props) {\n  const classes = useStyles();\n  const {\n    label,\n    value,\n    name,\n    items,\n    formControlProps,\n    selectProps,\n    required,\n    disabled = false,\n    tabIndex = 0,\n    mode\n  } = props;\n\n  let newProps = _objectSpread({}, props);\n\n  delete newProps[\"helperText\"];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      style: {\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(TranslateIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 9,\n      children: /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, formControlProps), {}, {\n        size: \"small\",\n        fullWidth: true,\n        disabled: disabled,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          required: required,\n          id: \"demo-simple-select-label\",\n          classes: {\n            root: classes.inputLabel,\n            required: classes.selectRequired\n          },\n          style: {\n            color: mode === 'day' ? '#1F1F1F' : '#FFFFFF'\n          },\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MaterialSelect, _objectSpread(_objectSpread(_objectSpread({}, selectProps), {}, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          style: {\n            backgroundColor: 'transparent',\n            color: mode === 'day' ? '#1F1F1F' : '#FFFFFF'\n          },\n          disableUnderline: true,\n          inputProps: {\n            name: name,\n            classes: {\n              select: classes.input\n            }\n          },\n          SelectDisplayProps: {\n            tabIndex: tabIndex\n          },\n          value: value === null ? \"\" : value,\n          label: label,\n          displayEmpty: true,\n          renderValue: selected => {\n            function checkEqual(a, b) {\n              if (a === null || a === undefined) {\n                a = \"\";\n              }\n\n              if (b === null || b === undefined) {\n                b = \"\";\n              }\n\n              if (typeof a === \"number\") {\n                a = a.toString();\n              }\n\n              if (typeof b === \"number\") {\n                b = b.toString();\n              }\n\n              return a == b;\n            }\n\n            let filters = items.filter(item => checkEqual(item.value, selected));\n            return filters[0] ? filters[0][\"label\"] : \"\";\n          }\n        }, newProps), {}, {\n          children: items.map(function (item, index) {\n            var _item$props2, _item$value2, _item$label2;\n\n            return /*#__PURE__*/_createElement(MenuItem, _objectSpread(_objectSpread({}, (_item$props2 = item.props) !== null && _item$props2 !== void 0 ? _item$props2 : null), {}, {\n              key: index,\n              value: (_item$value2 = item.value) !== null && _item$value2 !== void 0 ? _item$value2 : \"\",\n              classes: {\n                root: classes.input\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }\n            }), (_item$label2 = item.label) !== null && _item$label2 !== void 0 ? _item$label2 : \"\");\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\nSelect.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  formControlProps: PropTypes.object,\n  inputLabelProps: PropTypes.object,\n  selectProps: PropTypes.object\n};\nSelect2.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  formControlProps: PropTypes.object,\n  inputLabelProps: PropTypes.object,\n  selectProps: PropTypes.object\n};","map":{"version":3,"sources":["/Users/wangweian/wangweian/weian/component/Public/PublicComponent.js"],"names":["makeStyles","Select","MaterialSelect","InputLabel","FormControl","MenuItem","PropTypes","Grid","TranslateIcon","useStyles","inputLabel","fontSize","fontFamily","display","flexDirection","props","classes","onOpen","onClose","onChange","items","open","value","mode","color","backgroundColor","map","item","index","root","input","label","Select2","name","formControlProps","selectProps","required","disabled","tabIndex","newProps","marginTop","selectRequired","select","selected","checkEqual","a","b","undefined","toString","filters","filter","propTypes","string","oneOfType","number","isRequired","func","array","object","inputLabelProps"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { Select as MaterialSelect, InputLabel, FormControl, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TranslateIcon from '@material-ui/icons/Translate';\n\nconst useStyles = makeStyles({\n    inputLabel: {\n        fontSize:\"1.1rem\",\n        fontFamily:\"微軟正黑體\",\n        display: \"flex\",\n        flexDirection: \"row-Reverse\"\n    }\n})\n\nexport function Select(props) {\n    const classes = useStyles();\n    const {\n        onOpen,\n        onClose,\n        onChange,\n        items,\n        open,\n        value,\n        mode\n    } = props;\n\n    return (\n        <FormControl>\n            <MaterialSelect\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                open={open}\n                onClose={onClose}\n                onOpen={onOpen}\n                value={value}\n                onChange={onChange}\n                disableUnderline\n                autoFocus={false}\n                renderValue={()=>{\n                    return <TranslateIcon style={{color:(mode==='day'?'#1F1F1F':'#FFFFFF')}}/>\n                }}\n                style={{backgroundColor: 'transparent'}}\n            >\n                {items.map(function(item,index) {\n                    return (\n                        <MenuItem\n                            {...item.props ?? null}\n                            key={index}\n                            value={item.value??\"\"}\n                            classes={{root:classes.input}}\n                        >\n                            {item.label??\"\"}\n                        </MenuItem>\n                    )\n                })}\n            </MaterialSelect>\n        </FormControl>            \n    );\n}\n\nexport function Select2(props) {\n    const classes = useStyles();\n    const {\n        label,\n        value,\n        name,\n        items,\n        formControlProps,\n        selectProps,\n        required,\n        disabled =false,\n        tabIndex=0,\n        mode\n    } = props;\n\n    let newProps = {\n        ...props\n    };\n    delete newProps[\"helperText\"];\n\n    return (\n        <Grid container>\n            <Grid item xs={2} style={{marginTop:'1rem'}}>\n                <TranslateIcon/>\n            </Grid>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={9}>\n            <FormControl\n                {...formControlProps}\n                size=\"small\"\n                fullWidth\n                disabled={disabled}\n            >\n                <InputLabel\n                    required={required}\n                    id=\"demo-simple-select-label\"\n                    classes={{\n                        root:classes.inputLabel,\n                        required:classes.selectRequired\n                    }}\n                    style={{color:(mode==='day'?'#1F1F1F':'#FFFFFF')}}\n                >\n                    {label}\n                </InputLabel>\n                <MaterialSelect\n                    {...selectProps}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    style={{backgroundColor: 'transparent',color:(mode==='day'?'#1F1F1F':'#FFFFFF')}}\n                    disableUnderline\n                    inputProps={{\n                        name: name,\n                        classes: {select: classes.input},\n                    }}\n                    SelectDisplayProps={{\n                        tabIndex:tabIndex\n                    }}\n                    value={value===null?\"\":value}\n                    label={label}\n                    displayEmpty={true}\n                    renderValue={selected => {\n                        function checkEqual(a,b){\n                            if (a === null || a===undefined){\n                                a = \"\";\n                            }\n\n                            if (b === null || b ===undefined){\n                                b = \"\";\n                            }\n\n                            if (typeof a === \"number\"){\n                                a = a.toString();\n                            }\n\n                            if (typeof b === \"number\"){\n                                b = b.toString();\n                            }\n\n                            return a == b;\n                        }\n\n                        let filters= items.filter(item=> checkEqual(item.value,selected)  )\n\n                        return filters[0]?filters[0][\"label\"]:\"\";\n                    }}\n                    {...newProps}\n                >\n                    {items.map(function(item,index) {\n                        return (\n                            <MenuItem\n                                {...item.props ?? null}\n                                key={index}\n                                value={item.value??\"\"}\n                                classes={{root:classes.input}}\n                            >\n                                {item.label??\"\"}\n                            </MenuItem>\n                        )\n                    })}\n                </MaterialSelect>\n            </FormControl>\n            </Grid>\n        </Grid>\n    );\n}\n\nSelect.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    formControlProps: PropTypes.object,\n    inputLabelProps: PropTypes.object,\n    selectProps: PropTypes.object\n};\n\nSelect2.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]).isRequired,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    formControlProps: PropTypes.object,\n    inputLabelProps: PropTypes.object,\n    selectProps: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}